apiVersion: apps/v1
kind: Deployment
metadata:
  name: bus-live-exporter
  namespace: sat-bus
spec:
  replicas: 1
  selector: { matchLabels: { app: bus-live-exporter } }
  template:
    metadata: { labels: { app: bus-live-exporter } }
    spec:
      containers:
        - name: exporter
          image: python:3.11-alpine
          ports: [{ name: metrics, containerPort: 8000 }]
          env:
            - { name: NATS_URL,     value: "nats://nats.platform.svc.cluster.local:4222" }  # adjust for your cluster
            - { name: NATS_SUBJECT, value: "telemetry.bus.housekeeping" }
            - { name: BUS_ID,       value: "bus-1" }
          command: ["/bin/sh","-lc"]
          args:
            - |
              pip install --no-cache-dir prometheus_client==0.20.0 nats-py==2.6.0
              python /app/exporter.py
          volumeMounts:
            - { name: code, mountPath: /app }
          readinessProbe: { httpGet: { path: /metrics, port: metrics }, initialDelaySeconds: 3 }
          livenessProbe:  { httpGet: { path: /metrics, port: metrics }, initialDelaySeconds: 10 }
      volumes:
        - name: code
          configMap: { name: bus-live-exporter, defaultMode: 0444 }
---
apiVersion: v1
kind: Service
metadata:
  name: bus-live-exporter
  namespace: sat-bus
  labels: { app: bus-live-exporter }
spec:
  selector: { app: bus-live-exporter }
  ports:
    - { name: metrics, port: 8000, targetPort: metrics }
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: bus-live-exporter
  namespace: sat-bus
  labels: { release: kps }   # <-- match your kube-prometheus-stack release label
spec:
  selector: { matchLabels: { app: bus-live-exporter } }
  namespaceSelector: { matchNames: ["sat-bus"] }
  endpoints:
    - port: metrics
      path: /metrics
      interval: 2s         # faster scrape for "live" feel
      scrapeTimeout: 1s
---
# (Optional) only Prometheus can reach /metrics
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata: { name: allow-prometheus, namespace: sat-bus }
spec:
  podSelector: { matchLabels: { app: bus-live-exporter } }
  policyTypes: ["Ingress"]
  ingress:
    - from:
        - namespaceSelector: { matchLabels: { kubernetes.io/metadata.name: monitoring } }
      ports:
        - port: 8000
